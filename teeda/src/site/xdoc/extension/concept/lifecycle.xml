<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document
	PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
	"http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
	<properties>
		<title>Extension - Concept - Life cycle</title>
	</properties>
	<body>
		<section name="Life cylce">
			<ul>
				<li>
					<a href="#Abstracts">Abstracts</a>
				</li>
				<li>
					<a href="#Life cycle method">Life cycle method</a>
					<ul>
						<li>
							<a href="#initialize method">
								initialize() method
							</a>
						</li>
						<li>
							<a href="#do method">do～()method</a>
						</li>
						<li>
							<a href="#prerender method">prerender() method</a>
						</li>
					</ul>
				</li>
				<li>
					<a href="#Request pattern">Request pattern</a>
				</li>
				<li>
					<a href="#Request pattern and Life cycle method">
						Request pattern and Life cycle method
					</a>
					<ul>
						<li>
							<a href="#Initial view">Initial view</a>
						</li>
						<li>
							<a href="#Post back_show self view">Post back (show self view)</a>
						</li>
						<li>
							<a href="#Post back_Redirect">Post back (Redirect)</a>
						</li>
						<li>
							<a href="#Redirect show">Redirect show</a>
						</li>
					</ul>
				</li>
				<li>
					<a href="#View transition">View transition</a>
				</li>
				<li>
					<a href="#Relation with JSF Life cycle">Relation with JSF Life cycle</a>
				</li>
			</ul>
		</section>

		<section name="Abstracts">
			<p>
				Teeda Extension calls methods of the page class according to REQUEST from web browser.
				This method is called as Life cycle method.
			</p>
			<p>Life cycle methods are below:</p>
			<ul>
				<li>
					<code>initialize()</code>
				</li>
				<li>
					<code>do～()</code>
				</li>
				<li>
					<code>prerender()</code>
				</li>
			</ul>
		</section>

		<section name="Life cycle method">
			<subsection name="initialize method">
				<p>
					<code>initialize()</code>
					 method is called when the Page is shown at the start,
or when transit(REDIRECT) of other Page to the Page.
				</p>
				<p>
					<code>initialize()</code>
					 method follows the conventions below:
				</p>
				<dl>
					<dt>Visibility</dt>
					<dd>
						<code>public</code>
					</dd>
					<dt> method name</dt>
					<dd>
						<code>initialize</code>
					</dd>
					<dt>Arguments</dt>
					<dd>NONE</dd>
					<dt>Return value type</dt>
					<dd>
						<code>Class</code>
						or
						<code>String</code>
						or
						<code>void</code>
						.
					</dd>
				</dl>
				<source><![CDATA[
public Class initialize() {
    ...
}
]]></source>
				<p>
					<code>initialize()</code>
					 method is not called when
					<a href="page.html#Post back">Post back</a>
					.
				</p>
			</subsection>

			<subsection name="do～() method">
				<p>
					<code>do～()</code>
					 method is called when a form is submitted(
					<a href="page.html#Post back">Post back</a>
					).
				</p>
				<p>
					<code>do～()</code>
					 method follows the conventions below:
				</p>
				<dl>
					<dt>Visibility</dt>
					<dd>
						<code>public</code>
					</dd>
					<dt> method name</dt>
					<dd>
                                                Start from 
						<code>do</code>
						.
					</dd>
					<dt>Arguments</dt>
					<dd>NONE</dd>
					<dt>Return value type</dt>
					<dd>
						<code>Class</code>
						or
						<code>String</code>
						or
						<code>void</code>
						.
					</dd>
				</dl>
				<source><![CDATA[
public Class doUpdate() {
    ...
}
]]></source>
				<p>
					<code>do～()</code>
					 method is linked with submit button and only called when related button is pushed.
<!--
(
					<a href="">詳細</a>
					)．-->
				</p>
				<source><![CDATA[
<input type="submit" id="doUpdate" value="Update!" />
]]></source>
				<p>
					<code>do～()</code>
					 method is not called when the case is not Post back, or there are errors in Validation.
				</p>
			</subsection>

			<subsection name="prerender() method">
				<p>
					<code>prerender()</code>
					 method is called right a view is rendered.
				</p>
				<p>
					<code>prerender()</code>
					 method follows the conventions below:
				</p>
				<dl>
					<dt>Visibility</dt>
					<dd>
						<code>public</code>
					</dd>
					<dt> method name</dt>
					<dd>
						<code>prerender</code>
					</dd>
					<dt>Argument</dt>
					<dd>NONE</dd>
					<dt>Return value type</dt>
					<dd>
						<code>Class</code>
						or
						<code>String</code>
						or
						<code>void</code>
						.
					</dd>
				</dl>
				<source><![CDATA[
public Class prerender() {
    ...
}
]]></source>
				<p>
					<code>prerender()</code>
					 method is not called when Redirect to other page.
				</p>
			</subsection>
		</section>

		<section name="Request pattern">
			<p>
				Teeda Extension has 4 basic patterns for processing request from web browser.
			</p>
			<img src="../../images/extension/concept/lifecycle1.png"
				width="616" height="637" alt="Request pattern" />
			<dl>
				<dt>Initial view</dt>
				<dd>Request by clicking Book mark or link.</dd>
				<dt>Post back (Show self view)</dt>
				<dd>
					Request by submit of form in View that is shown now.
					It shows same view without view transition.
				</dd>
				<dt>Post back (Redirect)</dt>
				<dd>
					Request by submit of form in View that is shown now.
					It Redirect to Page that is defined by return value of do～() method.
				</dd>
				<dt>Redirect</dt>
				<dd>Request by Redirect.</dd>
			</dl>
		</section>

		<section name="Request pattern and Life cycle method">
			<p>
				Here describes which Life cycle method is called For each<a href="#Request pattern">Request pattern</a>.
			</p>

			<subsection name="Initial view">
				<p>
					In Initial view,
					<code>initialize()</code>
					and
					<code>prerender()</code>
					 method is called.
				</p>
				<img src="../../images/extension/concept/lifecycle2.png"
					width="466" height="278" alt="Initial view" />
			</subsection>

			<subsection name="Post back (Show self view)">
				<p>
					In Post back (Show self view),
					<code>do～()</code>
					 method and
					<code>prerender()</code>
					 method is called.
				</p>
				<img src="../../images/extension/concept/lifecycle3.png"
					width="466" height="259" alt="Post back (Show self view)" />
				<p>
					If there are errors in Validation, only
					<code>prerender()</code>
					 method is called.
				</p>
			</subsection>

			<subsection name="Post back (Redirect)">
				<p>
					In Post back (Redirect), only
					<code>do～()</code>
					 method is called.
					Redirect to Page according to return value of <code>do～()</code>
					 method.
				</p>
				<img src="../../images/extension/concept/lifecycle4.png"
					width="466" height="231" alt="Post back (Redirect)" />
				<p>
					If there are validation error, it will be
					<a href="#Post back_show self view">Post back(Show self view)</a>
					.
				</p>
			</subsection>

			<subsection name="Redirect show">
				<p>
					In Redirect show,
					<code>initialize()</code>
					and
					<code>prerender()</code>
					 method is called.
				</p>
				<img src="../../images/extension/concept/lifecycle5.png"
					width="466" height="259" alt="Redirect show" />
			</subsection>
		</section>

		<section name="View transition">
			<p>
				Return type of Life cycle method can be
				<code>Class</code>
				or
				<code>String</code>
				. We recommend that return type should be <code>Class</code> type because it is easy for refactoring.
			</p>
			<source><![CDATA[
public class FooPage {
    ...
    public Class doSubmit() {
        ...
        return NextPage.class;
    }
}
]]></source>
			<p>
				By defining return value as the Page class or S2 component name, it Redirects(Page transition) to the Page.
			</p>
			<p>
				If the return value is
				<code>null</code>
				, it doesn't Redirect(Page transition) just show self View.
			</p>
			<p>
				If the return is the Page class(or S2 component name) itself, it Redirects to same Page. In this case, it is treated as Page transiton to same Page.
			</p>
			<source><![CDATA[
public class FooPage {
    ...
    public Class doSubmit() {
        ...
        return FooPage.class;
    }
}
]]></source>
			<p>
				If it doesn't Redirect(Page transition), the return type can be
				<code>void</code>
				.
			</p>
			<source><![CDATA[
public class FooPage {
    ...
    public void initialize() {
        ...
    }
}
]]></source>
		</section>

		<section name="Relation with JSF Life cycle">
			<p>
				The relation between JSF Life cycle and Life cycle method, setter/getter method of Page class are below:
			</p>
			<img src="../../images/extension/concept/lifecycle6.png"
				width="609" height="530" alt="Relation with JSF Life cycle" />
		</section>
	</body>
</document>
