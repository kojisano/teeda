<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document
	PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
	"http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
	<properties>
		<title>Extension - Concepts - Layout</title>
	</properties>
	<body>
		<section name="Layout">
			<ul>
				<li>
					<a href="#Abstracts">Abstracts</a>
				</li>
				<li>
					<a href="#Applied Layout">Applied Layout</a>
				</li>
				<li>
					<a href="#LayoutHTML">LayoutHTML</a>
					<ul>
						<li>
							<a href="#Header">Header</a>
						</li>
						<li>
							<a href="#Body">Body</a>
						</li>
					</ul>
				</li>
				<li>
					<a href="#Page class">Page class</a>
				</li>
			</ul>
		</section>

		<section name="Abstracts">
			<p>
				By using Layout function, it can share Application common Layout, 
				make parts of page (e.g. Header and footer, menu) as common component.
			</p>
			<p>
				If Teeda applies Layout to the page that is requested from Web browser,
				last renderring result is defined by Layout.
			</p>
			<p>
				In the Layout, 
				<code>&lt;te:includeChildBody&gt;</code>
				Element will be replaced with the 
				<code>&lt;body&gt;</code>
				Element of requested Page contents. And,
				<code>&lt;te:include&gt;</code>
				Element will be replaced with the <code>&lt;body&gt;</code> Element of the Page that is pointed by
				<code>te:src</code>
			</p>
			<img src="../../images/extension/concept/layout1.png"
				width="547" height="303" alt="Apply Layout" />
			<p>The result of the rendering result of the example above will be </p>
			<img src="../../images/extension/concept/layout2.png"
				width="208" height="303" alt="Renderring result" />
		</section>

		<section name="Applied Layout">
			<p>
				デフォルトのLayoutHTMLは，
				<code>
					<var>ビュールート</var>
					/layout/layout.html
				</code>
				になります．
			</p>
			<p>
				デフォルトのLayoutHTMLを変更するには，
				<code>web.xml</code>
				のコンテキストパラメータでデフォルトで使用するLayoutを指定します． パラメータ名は
				<code>teeda.DEFAULT_LAYOUT_PATH</code>
				で，値はビュールート (デフォルトは
				<code>/view</code>
				) からのパスです．
			</p>
			<h5>例：web.xml</h5>
			<source><![CDATA[
<context-param>
    <param-name>teeda.DEFAULT_LAYOUT_PATH</param-name>
    <param-value>/layout/myLayout.html</param-value>
</context-param>
]]></source>
			<p>
				特定のページだけ異なったLayoutを使うには， デフォルト以外のLayoutを使いたい画面のPage classに
				<code>getLayout()</code>
				メソッドを用意して， 戻り値で使用するLayoutのPage classまたは
				<a href="page.html#ページ名の命名規約">ページ名</a>
				を指定します． このメソッドは
				<code>public</code>
				で引数はなく，戻り値の型は
				<code>Class</code>
				または
				<code>String</code>
				です．
			</p>
			<h5>例：Page class</h5>
			<source><![CDATA[
public Class getLayout() {
    return OtherLayoutPage.class;
}
]]></source>
		</section>

		<section name="LayoutHTML">
			<subsection name="Header">
				<p>
					レンダリング結果の
					<code>&lt;head&gt;</code>
					Elementの内容は，LayoutHTMLの
					<code>&lt;head&gt;</code>
					Elementの内容がベースになります．
				</p>
				<p>
					ただし，
					<code>&lt;title&gt;</code>
					Elementはリクエストされたページの
					<code>&lt;title&gt;</code>
					Elementが使われます． また，LayoutHTMLの
					<code>&lt;head&gt;</code>
					Elementにリクエストされたページの次のElementが加えられてレンダリングされます．
				</p>
				<ul>
					<li>
						<code>&lt;link&gt;</code>
						Element
					</li>
					<li>
						<code>&lt;script&gt;</code>
						Element
					</li>
					<li>
						<code>&lt;style&gt;</code>
						Element
					</li>
				</ul>
			</subsection>

			<subsection name="Body">
				<h4>te:includeChildBodyElement</h4>
				<p>
					LayoutHTMLの中の
					<code>&lt;te:layoutChildBody&gt;</code>
					Elementは，リクエストされたページの
					<code>&lt;body&gt;</code>
					Elementの内容に置き換えられます．
				</p>
				<p>
					<code>&lt;te:layoutChildBody&gt;</code>
					Elementは，LayoutHTMLの中で厳密に1つだけ記述しなくてはなりません． 複数の
					<code>&lt;te:layoutChildBody&gt;</code>
					を記述することも，省略することも許されません．
				</p>

				<h4>te:includeElement</h4>
				<p>
					LayoutHTMLの中の
					<code>&lt;te:include&gt;</code>
					Elementは，
					<code>te:src</code>
					属性で指定されたページの
					<code>&lt;body&gt;</code>
					Elementの内容に置き換えられます．
				</p>
				<p>
					<code>&lt;te:include&gt;</code>
					ElementはLayoutHTMLの中にいくつでも記述することができます． また，省略することもできます．
				</p>
			</subsection>
		</section>

		<section name="Page class">
			<p>
				LayoutHTMLや
				<code>&lt;te:include&gt;</code>
				ElementでインクルードされるHTMLも対応するPage classを持つことができます．
			</p>
			<p>
				リクエストされたHTMLに対応するPage classに，
				LayoutやインクルードされるHTMLに対応するPage classのプロパティを用意すると，
				それらのPage classがDIされます．
			</p>
			<img src="../../images/extension/concept/layout3.png"
				width="321" height="208" alt="LayoutとDI" />
		</section>
	</body>
</document>
